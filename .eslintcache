[{"C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\index.js":"1","C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\App.js":"2","C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\reportWebVitals.js":"3","C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\components\\Recipes.js":"4","C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\components\\Page.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":3140,"mtime":1608973898208,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1543,"mtime":1608973264219,"results":"10","hashOfConfig":"7"},{"size":544,"mtime":1608972725036,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1l7jcyz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\index.js",[],["24","25"],"C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\App.js",["26"],"C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\reportWebVitals.js",[],"C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\components\\Recipes.js",["27"],"import React from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst Recipes = ({ title, image, nutrition, sourceUrl, loading }) => {\r\n  const nutrients = nutrition.nutrients;\r\n  if (loading) {\r\n    return (\r\n      <Col className=\"my-auto\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading.....</span>\r\n        </Spinner>\r\n      </Col>\r\n    );\r\n  }\r\n  return (\r\n    <Col className=\"m-4\" sm={10} md={4} lg={3}>\r\n      <Card className=\"shadow\">\r\n        <Card.Img variant=\"top\" src={image} alt={title} />\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n          {nutrients.map((nutrient) => {\r\n            if (\r\n              \r\n              nutrient.title === 'Carbohydrates' ||\r\n              nutrient.title === 'Calories' ||\r\n              nutrient.title === 'Protein' ||\r\n              nutrient.title === 'Fat' \r\n            ) {\r\n              return (\r\n                <Card.Text\r\n                  className=\"m-1\"\r\n                  key={nutrient.amount}\r\n                >{`${nutrient.title}: ${nutrient.amount} ${nutrient.unit}`}</Card.Text>\r\n              );\r\n            }\r\n          })}\r\n          <a href={sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Button variant=\"primary\">Recipe Info</Button>\r\n          </a>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\nexport default Recipes;\r\n","C:\\Users\\POONAM KUMARI\\Desktop\\React\\recipe\\src\\components\\Page.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":20,"column":10,"nodeType":"34","messageId":"35","endLine":20,"endColumn":15},{"ruleId":"36","severity":1,"message":"37","line":25,"column":37,"nodeType":"38","messageId":"39","endLine":25,"endColumn":39},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]